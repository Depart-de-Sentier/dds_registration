{"version":3,"sources":["src/assets/stripe-init/billing_event_stripe_payment_proceed.ts","src/assets/stripe-init/billing_membership_stripe_payment_proceed.ts","src/assets/scripts.ts","src/assets/test/test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;GAGG;;;;;IAIH,IAAM,IAAI,GAAG,EAAE,CAAC;IAEhB,yCAAyC;IACzC,gDAAgD;IAChD,SAAgB,oCAAoC,CAAC,MAAoC;QAErF,IAAA,sBAAsB,GAGpB,MAAM,uBAHc,EACtB,WAAW,GAET,MAAM,YAFG,EACX,aAAa,GACX,MAAM,cADK,CACJ;QAEX,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE;YACpD,sBAAsB,wBAAA;YACtB,aAAa,eAAA;YACb,WAAW,aAAA;SACZ,CAAC,CAAC;QAEH,uBAAuB;QACvB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;QAErD,kBAAkB;QAClB,SAAe,UAAU,CAAC,QAAwB,EAAE,KAAkB;;;;;;4BAClE,KAAK,CAAC,cAAc,EAAE,CAAC;4BAEvB,OAAO,CAAC,GAAG,CAAC,mEAAmE,EAAE;gCAC/E,KAAK,OAAA;gCACL,MAAM,QAAA;gCACN,MAAM,QAAA;gCACN,QAAQ,UAAA;gCACR,WAAW;gCACX,kBAAkB;gCAClB,QAAQ;6BACT,CAAC,CAAC;4BACH,QAAQ,CAAC;4BAGS,qBAAM,MAAM,CAAC,cAAc,CAAC;oCAC5C,iEAAiE;oCACjE,QAAQ,UAAA;oCACR,aAAa,EAAE;wCACb,UAAU,EAAE,WAAW,EAAE,4CAA4C;qCACtE;iCACF,CAAC,EAAA;;4BANM,KAAK,GAAK,CAAA,SAMhB,CAAA,MANW;4BAQb,OAAO,CAAC,GAAG,CAAC,qEAAqE,EAAE;gCACjF,KAAK,OAAA;gCACL,KAAK,OAAA;gCACL,MAAM,QAAA;gCACN,MAAM,QAAA;gCACN,YAAY;gCACZ,WAAW;gCACX,kBAAkB;gCAClB,QAAQ;6BACT,CAAC,CAAC;4BACH,QAAQ,CAAC;4BAET,IAAI,KAAK,EAAE,CAAC;gCACV,OAAO,CAAC,GAAG,CAAC,mEAAmE,EAAE;oCAC/E,KAAK,OAAA;oCACL,KAAK,OAAA;oCACL,MAAM,QAAA;oCACN,MAAM,QAAA;oCACN,YAAY;oCACZ,WAAW;oCACX,kBAAkB;oCAClB,QAAQ;iCACT,CAAC,CAAC;gCACH,QAAQ,CAAC;gCAKH,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;gCAClE,IAAI,gBAAgB,EAAE,CAAC;oCACrB,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC;gCACrD,CAAC;4BACH,CAAC;iCAAM,CAAC;gCACN,0EAA0E;gCAC1E,0EAA0E;gCAC1E,4EAA4E;gCAC5E,OAAO,CAAC,GAAG,CAAC,qEAAqE,EAAE;oCACjF,WAAW,aAAA;oCACX,KAAK,OAAA;oCACL,MAAM,QAAA;oCACN,MAAM,QAAA;oCACN,YAAY;oCACZ,WAAW;oCACX,kBAAkB;oCAClB,QAAQ;iCACT,CAAC,CAAC;gCACH,QAAQ,CAAC;gCACT,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,WAAW,CAAC;4BACrC,CAAC;;;;;SACJ;QAED,aAAa,EAAE,CAAC;QAChB,wBAAwB;QAExB,SAAS,aAAa;YACpB,IAAM,OAAO,GAAG;gBACd,YAAY,EAAE,aAAa;gBAC3B,0CAA0C;gBAC1C,UAAU,EAAE,EAAC,OAAO,CAAC;aACtB,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,8DAA8D,EAAE;gBAC1E,OAAO,SAAA;gBACP,sBAAsB,wBAAA;gBACtB,aAAa,eAAA;gBACb,WAAW,aAAA;gBACX,MAAM,QAAA;gBACN,MAAM,QAAA;aACP,CAAC,CAAC;YACH,YAAY;YAEZ,+GAA+G;YAC/G,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAE1C,uCAAuC;YACvC,IAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAClD,cAAc,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YAEzC,IAAM,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;YAErD,IAAI,CAAC,IAAI,EAAE,CAAC;gBACV,IAAM,SAAS,GAAG,+BAA+B,CAAA;gBACjD,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;gBACnC,OAAO,CAAC,GAAG,CAAC,4DAA4D,EAAE,SAAS,EAAE;oBACnF,KAAK,OAAA;oBACL,MAAM,QAAA;oBACN,MAAM,QAAA;oBACN,OAAO,SAAA;oBACP,QAAQ,UAAA;oBACR,cAAc,gBAAA;oBACd,IAAI,MAAA;iBACL,CAAC,CAAC;gBACH,QAAQ,CAAC;gBACT,OAAO;YACT,CAAC;YAED,OAAO,CAAC,GAAG,CAAC,8DAA8D,EAAE;gBAC1E,UAAU;gBACV,UAAU;gBACV,WAAW;gBACX,QAAQ,UAAA;gBACR,cAAc,gBAAA;gBACd,IAAI,MAAA;aACL,CAAC,CAAC;YACH,QAAQ,CAAC;YAET,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;QACnE,CAAC;QAED;;;;;;;;;;;;;;;;;;UAkBE;IAEJ,CAAC;IAxKD,oFAwKC;;ACnLD;;;GAGG;;;;;IAEH,SAAgB,yCAAyC,CAAC,MAAoC;QAE1F,IAAA,sBAAsB,GAEpB,MAAM,uBAFc,EACtB,WAAW,GACT,MAAM,YADG,CACF;QAEX,OAAO,CAAC,GAAG,CAAC,6CAA6C,EAAE;YACzD,sBAAsB,wBAAA;YACtB,WAAW,aAAA;SACZ,CAAC,CAAC;QAEH,uBAAuB;QACvB,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;QAErD,UAAU,EAAE,CAAC;QAEb,wDAAwD;QACxD,SAAe,UAAU;;;;;;;4BACjB,iBAAiB,GAAG;;;;gDACP,qBAAM,KAAK,CAAC,WAAW,EAAE;gDACxC,MAAM,EAAE,MAAM;6CACf,CAAC,EAAA;;4CAFI,QAAQ,GAAG,SAEf;4CACuB,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;4CAAtC,YAAY,GAAK,CAAA,SAAqB,CAAA,aAA1B;4CACpB,sBAAO,YAAY,EAAC;;;iCACrB,CAAC;4BAGe,qBAAM,MAAM,CAAC,oBAAoB,CAAC;oCACjD,iBAAiB,mBAAA;iCAClB,CAAC,EAAA;;4BAFI,QAAQ,GAAG,SAEf;4BAEF,iBAAiB;4BACjB,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;;;;;SAC7B;IAEH,CAAC;IAnCD,8FAmCC;;ACxCD;;;;GAIG;;;;IAKH,sCAAsC;IACtC,MAAM,CAAC,oCAAoC,GAAG,2EAAoC,CAAC;IACnF,MAAM,CAAC,yCAAyC,GAAG,qFAAyC,CAAC;;AAE7F;;;;;GAKG;AClBH;;;GAGG;AAEH,CAAC,UAAU,MAAM;IACf,+BAA+B;AACjC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC","file":"scripts.js","sourcesContent":["/**\n * @module billing_event_stripe_payment_proceed.ts\n * @changed 2024.04.03, 17:13\n */\n\nimport type { StripeElements } from '@stripe/stripe-js/dist/stripe-js';\n\nconst test = 77;\n\n// Export function to the global scope...\n// window.billing_event_stripe_payment_proceed =\nexport function billing_event_stripe_payment_proceed(params: TCreateCheckoutSessionParams) {\n  const {\n    STRIPE_PUBLISHABLE_KEY,\n    success_url,\n    client_secret,\n  } = params;\n\n  console.log('[billing_event_stripe_payment_proceed]', {\n    STRIPE_PUBLISHABLE_KEY,\n    client_secret,\n    success_url,\n  });\n\n  // Initialize Stripe.js\n  const stripe = window.Stripe(STRIPE_PUBLISHABLE_KEY);\n\n  /** Form action */\n  async function submitForm(elements: StripeElements, event: SubmitEvent) {\n      event.preventDefault();\n\n      console.log('[billing_event_stripe_payment_proceed:startElements:submit] check', {\n        event,\n        params,\n        stripe,\n        elements,\n        // options,\n        // paymentElement,\n        // form,\n      });\n      debugger;\n\n      // @see https://docs.stripe.com/payments/accept-a-payment?platform=web&ui=elements#web-submit-payment\n      const { error } = await stripe.confirmPayment({\n        //`Elements` instance that was used to create the Payment Element\n        elements,\n        confirmParams: {\n          return_url: success_url, // 'https://example.com/order/123/complete',\n        },\n      });\n\n      console.log('[billing_event_stripe_payment_proceed:startElements:submit] checked', {\n        error,\n        event,\n        params,\n        stripe,\n        // elements,\n        // options,\n        // paymentElement,\n        // form,\n      });\n      debugger;\n\n      if (error) {\n        console.log('[billing_event_stripe_payment_proceed:startElements:submit] error', {\n          error,\n          event,\n          params,\n          stripe,\n          // elements,\n          // options,\n          // paymentElement,\n          // form,\n        });\n        debugger;\n\n        // This point will only be reached if there is an immediate error when\n        // confirming the payment. Show error to your customer (for example, payment\n        // details incomplete)\n        const messageContainer = document.querySelector('#error-message');\n        if (messageContainer) {\n          messageContainer.textContent = error.message || '';\n        }\n      } else {\n        // Your customer will be redirected to your `return_url`. For some payment\n        // methods like iDEAL, your customer will be redirected to an intermediate\n        // site first to authorize the payment, then redirected to the `return_url`.\n        console.log('[billing_event_stripe_payment_proceed:startElements:submit] success', {\n          success_url,\n          event,\n          params,\n          stripe,\n          // elements,\n          // options,\n          // paymentElement,\n          // form,\n        });\n        debugger;\n        window.location.href = success_url;\n      }\n  }\n\n  startElements();\n  // initializeCheckout();\n\n  function startElements() {\n    const options = {\n      clientSecret: client_secret,\n      // Fully customizable with appearance API.\n      appearance: {/*...*/},\n    };\n    console.log('[billing_event_stripe_payment_proceed:startElements] started', {\n      options,\n      STRIPE_PUBLISHABLE_KEY,\n      client_secret,\n      success_url,\n      stripe,\n      params,\n    });\n    // debugger;\n\n    // Set up Stripe.js and Elements to use in checkout form, passing the client secret obtained in a previous step\n    const elements = stripe.elements(options);\n\n    // Create and mount the Payment Element\n    const paymentElement = elements.create('payment');\n    paymentElement.mount('#payment-element');\n\n    const form = document.getElementById('payment-form');\n\n    if (!form) {\n      const errorText = 'Form node could not be found!'\n      const error = new Error(errorText);\n      console.log('[billing_event_stripe_payment_proceed:startElements] error', errorText, {\n        error,\n        params,\n        stripe,\n        options,\n        elements,\n        paymentElement,\n        form,\n      });\n      debugger;\n      return;\n    }\n\n    console.log('[billing_event_stripe_payment_proceed:startElements] created', {\n      // params,\n      // stripe,\n      // options,\n      elements,\n      paymentElement,\n      form,\n    });\n    debugger;\n\n    form.addEventListener('submit', submitForm.bind(null, elements));\n  }\n\n  /* OBSOLETE: Fetch Checkout Session and retrieve the client secret\n  async function initializeCheckout() {\n    const fetchClientSecret = async () => {\n      const response = await fetch(create_checkout_session_url, {\n        method: 'POST',\n      });\n      const { clientSecret } = await response.json();\n      return clientSecret;\n    };\n\n    // Initialize Checkout\n    const checkout = await stripe.initEmbeddedCheckout({\n      fetchClientSecret,\n    });\n\n    // Mount Checkout\n    checkout.mount('#checkout');\n  }\n  */\n\n}\n","/**\n * @module billing_membership_stripe_payment_proceed.ts\n * @changed 2024.04.03, 16:18\n */\n\nexport function billing_membership_stripe_payment_proceed(params: TCreateCheckoutSessionParams) {\n  const {\n    STRIPE_PUBLISHABLE_KEY,\n    success_url,\n  } = params;\n\n  console.log('[billing_membership_stripe_payment_proceed]', {\n    STRIPE_PUBLISHABLE_KEY,\n    success_url,\n  });\n\n  // Initialize Stripe.js\n  const stripe = window.Stripe(STRIPE_PUBLISHABLE_KEY);\n\n  initialize();\n\n  // Fetch Checkout Session and retrieve the client secret\n  async function initialize() {\n    const fetchClientSecret = async () => {\n      const response = await fetch(success_url, {\n        method: 'POST',\n      });\n      const { clientSecret } = await response.json();\n      return clientSecret;\n    };\n\n    // Initialize Checkout\n    const checkout = await stripe.initEmbeddedCheckout({\n      fetchClientSecret,\n    });\n\n    // Mount Checkout\n    checkout.mount('#checkout');\n  }\n\n}\n","/**\n * @desc Main js entry point module (scripts)\n * @module src/assets/scripts.ts\n * @changed 2024.04.03, 20:03\n */\n\nimport { billing_event_stripe_payment_proceed } from './stripe-init/billing_event_stripe_payment_proceed';\nimport { billing_membership_stripe_payment_proceed } from './stripe-init/billing_membership_stripe_payment_proceed';\n\n// Expose functions to global scope...\nwindow.billing_event_stripe_payment_proceed = billing_event_stripe_payment_proceed;\nwindow.billing_membership_stripe_payment_proceed = billing_membership_stripe_payment_proceed;\n\n/*\n * console.log('[scripts] Main client code entry point', {\n *   billing_event_stripe_payment_proceed,\n *   billing_membership_stripe_payment_proceed,\n * });\n */\n","/**\n * @module test.ts\n * @changed 2024.04.03, 16:18\n */\n\n(function (window) {\n  // console.log('Test', window);\n})(window);\n"]}